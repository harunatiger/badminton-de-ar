    = simple_form_for(@profile, html: { id: 'update_introduction', class: "form--sp" }) do |f|
      = f.error_notification
      = f.hidden_field :user_id, value: current_user.id
      .card.row-space-4
        .card-header Please write your self-introduction, favorite things, and languages you can use. these will be shown on your public profile.
        .card-body
          p.text-lead
            | Choose 
            b three categories 
            | that appeal to you the most. 
          .profile-category-container.row.row-space-2
            - PickupTag.all.order_by_created_at_asc.each do |pickup_tag|
              = hidden_field_tag  :category, pickup_tag.short_name
              .col-lg-15.col-md-3.col-xs-4.row-space-3
                - if @profile.pickups.exists?(pickup_tag)
                  = link_to "#", class: "select_category_link listing_image_selected media-round media-photo", pickup_id: pickup_tag.id, placehodler_str: pickup_tag_to_placeholder(pickup_tag)  do
                    = image_tag pickup_tag.icon, class: "img-responsive media-round"
                    i.fa.fa-check
                - else
                  = link_to "#", class: "select_category_link media-round media-photo", pickup_id: pickup_tag.id, placehodler_str: pickup_tag_to_placeholder(pickup_tag) do
                    = image_tag pickup_tag.icon, class: "img-responsive media-round"
                .text-center.set_category_container_title
                  small
                    b = pickup_tag.short_name
          p.text-help-block.row-space-4
            | For each of your chosen categories, 
            b write some examples of things or places 
            | that you like to let your guests know more about your personality. 
          .profile-category-keyword-container
            - @profile.profile_pickups.order_by_created_at_asc.each_with_index do |profile_pickup, i|
              - pickup_tag = profile_pickup_to_pickup_tag(profile_pickup)
              .selected_category[pickup_id='#{pickup_tag.id}' index=i]
                = f.fields_for :profile_pickups, profile_pickup do |pp|
                  = pp.hidden_field :pickup_id, value: pickup_tag.id
                  = image_tag pickup_tag.icon
                  .h5.row-space-2
                    = pickup_tag.short_name
                  .row-space-2
                    - name = 'profile[profile_pickups_attributes][' + i.to_s + '][tag_list][]'
                    - profile_pickup.tag_list_sort_by_created_at.each do |tag|
                      .example-tag.row-space-2
                        = pp.input_field :tag_list, value: tag, class: 'form-control imeoff', placeholder: pickup_tag_to_placeholder(pickup_tag), name: name
                        = link_to '#', class: 'delete_tag_link'
                          i.fa.fa-times.fa-red.balloon[title= "Remove example"]
                    .example-tag.row-space-2
                      = pp.input_field :tag_list, value: '', class: 'form-control imeoff', placeholder: pickup_tag_to_placeholder(pickup_tag), name: name
                      = link_to '#', class: 'delete_tag_link', title: "Remove example"
                        i.fa.fa-times.fa-red.balloon[title= "Remove example"]
                    span.tags_input_end
                  = link_to '#', class: 'add_tag_link'
                    i.fa.fa-plus
                    ' 
                    | add example
                    
                  
            span.input_categories_space_end
            
          hr.row-space-4
          
          .row.row-condensed.row-space-4.row-table
            label.text-right.col-3.col-middle[for="user_self_introduction"]
              | Languages
            .col-xs-9.fieldset.col-middle
              = collection_check_boxes(:profile, :language_ids, Language.ordered, :id, :name, checked: checked_language_ids(@profile), disabled: disabled_language_id) do |l|
                = l.label { l.check_box + l.text }
                - if l.text == 'English'
                  small.text-red
                    | *You can't uncheck. English is required in Huber.
          hr.row-space-4
          .row.row-condensed.row-space-4.row-table
            label.text-right.col-3.col-middle[for="user_self_introduction"]
              - if @progress.present?
                - if @progress.include?('self_introduction')
                  /.inputrate.inputrate-red +#{@progress['rate']}%
                  .ic-illust.reliability-up[title="Gain a person's confidence" data-toggle="tooltip"]
              | Introduction
            .col-9.self_introduction_wrapper.col-middle
              p
                | Expressing your personality is the first step in becoming a TOMODACHI GUIDE. 
                br
                | Write your self-introduction freely, using the following as an example. 
              = f.input_field :self_introduction, as: :text, cols: "30", class: "self_introduction-textarea imeoff", rows: "20", placeholder: ""
          hr.row-space-4
          .row.row-condensed.row-space-4.row-table
            label.text-right.col-3.col-middle[for="user_self_introduction"]
              | Profile Video
            .col-xs-9.fieldset.col-middle
              p
                | Give a short 30-second introduction of yourself in English.
                br
                | Your introduction video can bridge the gap between you and your guests.
              p.text-red
                | â€»Maximum file size is 100MB
              = render partial: 'profile_video', locals: { profile_video: @profile_video }
              = f.simple_fields_for :profile_video, ProfileVideo.new do |v|
                = v.input_field :video, as: :file, accept: "video/*"
                = hidden_field_tag :url, upload_video_profile_profile_videos_path(@profile)
      = f.button :submit, "Save", class: "btn btn-primary btn-large row-space-4", name: 'page_self_introduction'
